# docker compose file for running a 3-node PostgreSQL cluster
# with 3-node etcd cluster as the DCS and one haproxy node
#
# requires a patroni image build from the Dockerfile:
# $ docker build -t patroni .
# The cluster could be started as:
# $ docker-compose up -d
# You can read more about it in the:
# https://github.com/zalando/patroni/blob/master/docker/README.md
version: "2"

networks:
    lab:

name: lab3

services:
    etcd1: &etcd
        image: patroni
        networks: [ lab ]
        environment:
            ETCD_LISTEN_PEER_URLS: http://0.0.0.0:2380
            ETCD_LISTEN_CLIENT_URLS: http://0.0.0.0:2379
            ETCD_INITIAL_CLUSTER: etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380
            ETCD_INITIAL_CLUSTER_STATE: new
            ETCD_INITIAL_CLUSTER_TOKEN: tutorial
            ETCD_UNSUPPORTED_ARCH: arm64
        container_name: lab-etcd1
        hostname: etcd1
        command: etcd --name etcd1 --initial-advertise-peer-urls http://etcd1:2380

    etcd2:
        <<: *etcd
        container_name: lab-etcd2
        hostname: etcd2
        command: etcd --name etcd2 --initial-advertise-peer-urls http://etcd2:2380

    etcd3:
        <<: *etcd
        container_name: lab-etcd3
        hostname: etcd3
        command: etcd --name etcd3 --initial-advertise-peer-urls http://etcd3:2380

    haproxy:
        image: patroni
        networks: [ lab ]
        env_file: patroni.env
        hostname: haproxy
        container_name: lab-haproxy
        ports:
            - "5000:5000"
            - "5001:5001"
        command: haproxy
        environment: &haproxy_env
            ETCDCTL_ENDPOINTS: http://etcd1:2379,http://etcd2:2379,http://etcd3:2379
            PATRONI_ETCD3_HOSTS: "'etcd1:2379','etcd2:2379','etcd3:2379'"
            PATRONI_SCOPE: lab
        volumes:
            - ./.env:/docker-entrypoint-initdb.d/env
            - ./Data generators:/docker-entrypoint-initdb.d/Data generators
            - ./Migrations:/docker-entrypoint-initdb.d/Migrations
            - ./initialize.sh:/docker-entrypoint-initdb.d/1.sh

    patroni1:
        image: patroni
        networks: [ lab ]
        env_file: patroni.env
        hostname: patroni1
        container_name: lab-patroni1
        environment:
            <<: *haproxy_env
            PATRONI_NAME: patroni1

    patroni2:
        image: patroni
        networks: [ lab ]
        env_file: patroni.env
        hostname: patroni2
        container_name: lab-patroni2
        environment:
            <<: *haproxy_env
            PATRONI_NAME: patroni2

    grafana:
        image: grafana/grafana-oss
        networks: [ lab ]
        ports:
            - "3000:3000"
        volumes:
            - grafana-storage:/var/lib/grafana

    prometheus:
        image: prom/prometheus
        networks: [ lab ]
        ports:
            - "9090:9090"
        volumes:
          - ./prometheus.yml:/etc/prometheus/prometheus.yml

    exporter:
        image: prometheuscommunity/postgres-exporter
        networks: [ lab ]
        ports:
            - "9187:9187"
        volumes:
          - ./queries.yaml:/home/queries.yaml
        environment:
            DATA_SOURCE_NAME: "postgresql://postgres:postgres@host.docker.internal:5000/postgres?sslmode=disable"
            PG_EXPORTER_EXTEND_QUERY_PATH: "./home/queries.yaml"
        links:
          - prometheus

volumes:
  grafana-storage: {}